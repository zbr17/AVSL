metrics:
  - default: euclid.yaml # not used

collectors:
  - collector: AVSLCollector.yaml # New

selectors:
  - selector1: HardSelector.yaml
  - selector2: HardSelector.yaml
  - selector3: HardSelector.yaml
  - selector: HardSelector.yaml

losses:
  - loss1: MarginLoss.yaml
  - loss2: MarginLoss.yaml
  - loss3: MarginLoss.yaml
  - loss: MarginLoss.yaml

models:
  - trunk: bninception_decom.yaml # New
  - embedder: bninception_mlp_avsl.yaml # New

evaluators:
  - default: CalculatorFromMat.yaml # New

optimizers:
  - trunk: AdamW_models.yaml
  - embedder: AdamW_models.yaml
  - collector: AdamW_collectors.yaml
  - loss1: AdamW_losses.yaml
  - loss2: AdamW_losses.yaml
  - loss3: AdamW_losses.yaml
  - loss: AdamW_losses.yaml

schedulers:
  - trunk: step_lr.yaml
  - embedder: step_lr.yaml
  - collector: step_lr.yaml
  - loss1: step_lr.yaml
  - loss2: step_lr.yaml
  - loss3: step_lr.yaml
  - loss: step_lr.yaml

gradclipper:
  - trunk: gradclipper_models.yaml
  - embedder: gradclipper_models.yaml
  - collector: gradclipper_collectors.yaml
  - loss1: gradclipper_losses.yaml
  - loss2: gradclipper_losses.yaml
  - loss3: gradclipper_losses.yaml
  - loss: gradclipper_losses.yaml

transforms:
  - train: train_transforms.yaml
  - test: eval_transforms.yaml

datasets:
  - train: cub200_train.yaml
  - test: cub200_test.yaml

samplers:
  - train: MPerClassFullSampler.yaml

recorders:
  - default: base_recorder.yaml

trainers: 
  - default: BaseTrainer.yaml

testers:
  - default: TesterFromMat.yaml
managers:
  - default: BaseManager.yaml

LINK_SETTING: 
  to_device_list: [models, collectors, losses]

PIPELINE_SETTING:
  models:
    trunk:
      input: [data]
      output: [data]
      map: 
        models/embedder: [0]
    embedder:
      input: [data]
      output: [embed_list, certainty_list, link_list]
      map:
        collectors/collector: [0,1,2]
  collectors:
    collector:
      input: [embed_list, certainty_list, link_list, labels]
      output: [metric_mat, metric_mat, metric_mat, metric_mat, row_labels, col_labels, is_same_source, weight, weight, weight]
      map:
        selectors/selector1: [0,4,5,6]
        selectors/selector2: [1,4,5,6]
        selectors/selector3: [2,4,5,6]
        selectors/selector: [3,4,5,6]
        FINISH/default->margin_loss1: [7]
        FINISH/default->margin_loss2: [8]
        FINISH/default->margin_loss3: [9]
  selectors:
    selector1:
      input: [metric_mat, row_labels, col_labels, is_same_source]
      output: [metric_mat, row_labels, col_labels, is_same_source, indices_tuple, weight]
      map:
        losses/loss1: [0,1,2,3,4,5]
    selector2:
      input: [metric_mat, row_labels, col_labels, is_same_source]
      output: [metric_mat, row_labels, col_labels, is_same_source, indices_tuple, weight]
      map:
        losses/loss2: [0,1,2,3,4,5]
    selector3:
      input: [metric_mat, row_labels, col_labels, is_same_source]
      output: [metric_mat, row_labels, col_labels, is_same_source, indices_tuple, weight]
      map:
        losses/loss3: [0,1,2,3,4,5]
    selector:
      input: [metric_mat, row_labels, col_labels, is_same_source]
      output: [metric_mat, row_labels, col_labels, is_same_source, indices_tuple, weight]
      map:
        losses/loss: [0,1,2,3,4,5]
  losses:
    loss1:
      input: [metric_mat, row_labels, col_labels, indices_tuple, weights, is_same_source]
      output: [loss]
      map:
        FINISH/default->margin_loss1: [0]
    loss2:
      input: [metric_mat, row_labels, col_labels, indices_tuple, weights, is_same_source]
      output: [loss]
      map:
        FINISH/default->margin_loss2: [0]
    loss3:
      input: [metric_mat, row_labels, col_labels, indices_tuple, weights, is_same_source]
      output: [loss]
      map:
        FINISH/default->margin_loss3: [0]
    loss:
      input: [metric_mat, row_labels, col_labels, indices_tuple, weights, is_same_source]
      output: [loss]
      map:
        FINISH/default->margin_loss: [0]

